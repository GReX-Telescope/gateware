// Created by Verilog::EditFiles from requant.v
// Created by Verilog::EditFiles from requant.v
/* Generated by Yosys 0.21 (git sha1 e6d2a900a97, gcc 12.2.0 -march=x86-64 -mtune=generic -O2 -fno-plt -fexceptions -fstack-clash-protection -fcf-protection -fPIC -Os) */

`celldefine
module cm(gain, re, im, im_overflow, re_overflow, cm_in);
  reg \$auto$verilog_backend.cc:2083:dump_module$1  = 0;
  wire [11:0] \$1 ;
  wire \$11 ;
  wire \$13 ;
  wire \$15 ;
  wire \$17 ;
  wire \$19 ;
  wire \$21 ;
  wire \$23 ;
  wire [16:0] \$3 ;
  wire [11:0] \$5 ;
  wire [16:0] \$7 ;
  wire \$9 ;
  input [23:0] cm_in;
  wire [23:0] cm_in;
  input [4:0] gain;
  wire [4:0] gain;
  output [11:0] im;
  reg [11:0] im;
  wire [16:0] im_gain;
  output im_overflow;
  reg im_overflow;
  output [11:0] re;
  reg [11:0] re;
  wire [16:0] re_gain;
  output re_overflow;
  reg re_overflow;
  wire [11:0] unpack_im;
  wire [11:0] unpack_re;
  wire [23:0] unpack_unpack_in;
  assign \$9  = $signed(im_gain) > $signed(17'h007ff);
  assign \$11  = $signed(im_gain) < $signed(17'h1f800);
  assign \$13  = $signed(im_gain) > $signed(17'h007ff);
  assign \$15  = $signed(im_gain) < $signed(17'h1f800);
  assign \$17  = $signed(re_gain) > $signed(17'h007ff);
  assign \$1  = + gain;
  assign \$19  = $signed(re_gain) < $signed(17'h1f800);
  assign \$21  = $signed(re_gain) > $signed(17'h007ff);
  assign \$23  = $signed(re_gain) < $signed(17'h1f800);
  assign \$3  = $signed(unpack_im) * $signed(\$1 );
  assign \$5  = + gain;
  assign \$7  = $signed(unpack_re) * $signed(\$5 );
  unpack unpack (
    .im(unpack_im),
    .re(unpack_re),
    .unpack_in(unpack_unpack_in)
  );
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$11 , \$9  })
      2'b?1:
          im_overflow = 1'h1;
      2'b1?:
          im_overflow = 1'h1;
      default:
          im_overflow = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$15 , \$13  })
      2'b?1:
          im = 12'h7ff;
      2'b1?:
          im = 12'h800;
      default:
          im = im_gain[11:0];
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$19 , \$17  })
      2'b?1:
          re_overflow = 1'h1;
      2'b1?:
          re_overflow = 1'h1;
      default:
          re_overflow = 1'h0;
    endcase
  end
  always @* begin
    if (\$auto$verilog_backend.cc:2083:dump_module$1 ) begin end
    (* full_case = 32'd1 *)
    casez ({ \$23 , \$21  })
      2'b?1:
          re = 12'h7ff;
      2'b1?:
          re = 12'h800;
      default:
          re = re_gain[11:0];
    endcase
  end
  assign re_gain = \$7 ;
  assign im_gain = \$3 ;
  assign unpack_unpack_in = cm_in;
endmodule
`endcelldefine

